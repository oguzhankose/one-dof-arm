#!/usr/bin/env python
PACKAGE = "dynamic_tutorials"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


ref_group = gen.add_group("Reference Signal Parameters")

ref_enum = gen.enum([gen.const("step_like_reference", int_t, 0, "Step Like Reference"),
                      gen.const("trajectory_reference", int_t, 1, "Trajectory Reference")],
                      "An enum to set reference type")

ref_group.add("reference_type", int_t, 0, "A reference type parameter which is edited via an enum", 0, 0, 1, edit_method=ref_enum)

ref_group.add("ref_angle",    double_t,    0, "Step-Like Reference Angle", 0,  -90.0, 90.0)
ref_group.add("sin_ref_gain",    double_t,    0, "Sinusoidal Reference Gain", 30,  0.0, 90.0)
ref_group.add("sin_ref_f",    double_t,    0, "Sinusoidal Reference Frequency", 0.2,  0.0, 1.0)


size_enum = gen.enum([gen.const("Steady_State_Tracking", int_t, 0, "Steady-State Tracking"),
                      gen.const("Trajectory_Tracking", int_t, 1, "Trajectory Tracking")],
                      "An enum to set controller type")

gen.add("controller_type", int_t, 0, "A controller type parameter which is edited via an enum", 0, 0, 1, edit_method=size_enum)

ss_group = gen.add_group("Steady-State Tracking Controller Parameters")
ss_group.add("ss_Kp",    double_t,    0, "Steady-State Kp",  37.5, 0.0, 50.0)
ss_group.add("ss_Ki",   double_t,   0, "Trajectory Tracking Ki",  0.0, 0.0, 10.0)
ss_group.add("ss_Kd",   double_t,   0, "Trajectory Tracking Kd",  2.8, 0.0, 10.0)

tr_group = gen.add_group("Trajectory Tracking Controller Parameters")
tr_group.add("tr_Kp",    double_t,    1, "Trajectory Tracking Kp",  28.5, 0.0, 50.0)
tr_group.add("tr_Ki",   double_t,   1, "Trajectory Tracking Ki",  0.3, 0.0, 10.0)
tr_group.add("tr_Kd",   double_t,   1, "Trajectory Tracking Kd",  1.3, 0.0, 10.0)





exit(gen.generate(PACKAGE, "one_dof_arm", "Tutorials"))
